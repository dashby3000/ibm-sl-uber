supervisor running without clustering (unsupervised)
{ [Function: ModelConstructor]
  setMaxListeners: [Function],
  emit: [Function],
  addListener: [Function],
  on: [Function],
  once: [Function],
  removeListener: [Function],
  removeAllListeners: [Function],
  listeners: [Function],
  super_: 
   { [Function: ModelConstructor]
     setMaxListeners: [Function],
     emit: [Function],
     addListener: [Function],
     on: [Function],
     once: [Function],
     removeListener: [Function],
     removeAllListeners: [Function],
     listeners: [Function],
     super_: 
      { [Function: ModelConstructor]
        setMaxListeners: [Function],
        emit: [Function],
        addListener: [Function],
        on: [Function],
        once: [Function],
        removeListener: [Function],
        removeAllListeners: [Function],
        listeners: [Function],
        super_: [Object],
        defineProperty: [Function],
        getPropertyType: [Function],
        isProtectedProperty: [Function],
        isHiddenProperty: [Function],
        mixin: [Function],
        getDataSource: [Function],
        observe: [Function],
        removeObserver: [Function],
        clearObservers: [Function],
        notifyObserversOf: [Function],
        _notifyBaseObservers: [Function],
        notifyObserversAround: [Function],
        afterInitialize: null,
        beforeValidate: null,
        afterValidate: null,
        beforeSave: null,
        afterSave: null,
        beforeCreate: null,
        afterCreate: null,
        beforeUpdate: null,
        afterUpdate: null,
        beforeDestroy: null,
        afterDestroy: null,
        validatesPresenceOf: [Function],
        validatesAbsenceOf: [Function],
        validatesLengthOf: [Function],
        validatesNumericalityOf: [Function],
        validatesInclusionOf: [Function],
        validatesExclusionOf: [Function],
        validatesFormatOf: [Function],
        validate: [Function],
        validateAsync: [Function],
        validatesUniquenessOf: [Function],
        getter: {},
        setter: {},
        definition: [Object],
        settings: [Object],
        forEachProperty: [Function],
        attachTo: [Function],
        extend: [Function],
        registerProperty: [Function],
        registry: [Object],
        setup: [Function: setupPersistedModel],
        _ACL: [Function: getACL],
        checkAccess: [Function],
        _getAccessTypeForMethod: [Function],
        getApp: [Function],
        remoteMethod: [Function],
        disableRemoteMethod: [Function],
        belongsToRemoting: [Function],
        hasOneRemoting: [Function],
        hasManyRemoting: [Function],
        scopeRemoting: [Function],
        nestRemoting: [Function],
        ValidationError: [Object],
        sharedClass: [Object],
        sharedCtor: [Object],
        beforeRemote: [Function],
        afterRemote: [Function],
        afterRemoteError: [Function],
        _runWhenAttachedToApp: [Function],
        create: [Object],
        updateOrCreate: [Object],
        upsert: [Object],
        findOrCreate: [Object],
        exists: [Object],
        findById: [Object],
        find: [Object],
        findOne: [Object],
        destroyAll: [Object],
        remove: [Object],
        deleteAll: [Object],
        updateAll: [Object],
        update: [Object],
        destroyById: [Object],
        removeById: [Object],
        deleteById: [Object],
        count: [Object],
        getIdName: [Function],
        setupRemoting: [Function],
        diff: [Function],
        changes: [Function],
        checkpoint: [Function],
        currentCheckpoint: [Function],
        replicate: [Function],
        createUpdates: [Function],
        bulkUpdate: [Function],
        getChangeModel: [Function],
        getSourceId: [Function],
        enableChangeTracking: [Function],
        _defineChangeModel: [Function],
        rectifyAllChanges: [Function],
        handleChangeError: [Function],
        rectifyChange: [Function],
        findLastChange: [Function],
        updateLastChange: [Function],
        createChangeStream: [Object],
        autoAttach: 'db' },
     defineProperty: [Function],
     getPropertyType: [Function],
     isProtectedProperty: [Function],
     isHiddenProperty: [Function],
     mixin: [Function],
     getDataSource: [Function],
     observe: [Function],
     removeObserver: [Function],
     clearObservers: [Function],
     notifyObserversOf: [Function],
     _notifyBaseObservers: [Function],
     notifyObserversAround: [Function],
     afterInitialize: null,
     beforeValidate: null,
     afterValidate: null,
     beforeSave: null,
     afterSave: null,
     beforeCreate: null,
     afterCreate: null,
     beforeUpdate: null,
     afterUpdate: null,
     beforeDestroy: null,
     afterDestroy: null,
     validatesPresenceOf: [Function],
     validatesAbsenceOf: [Function],
     validatesLengthOf: [Function],
     validatesNumericalityOf: [Function],
     validatesInclusionOf: [Function],
     validatesExclusionOf: [Function],
     validatesFormatOf: [Function],
     validate: [Function],
     validateAsync: [Function],
     validatesUniquenessOf: [Function],
     getter: {},
     setter: { password: [Function] },
     definition: 
      { modelBuilder: [Object],
        name: 'User',
        rawProperties: [Object],
        settings: [Object],
        relations: [],
        properties: [Object],
        _ids: [Object] },
     settings: 
      { strict: false,
        base: [Object],
        hidden: [Object],
        acls: [Object],
        relations: [Object],
        maxTTL: 31556926,
        ttl: 1209600 },
     forEachProperty: [Function],
     attachTo: [Function],
     extend: [Function],
     registerProperty: [Function],
     registry: { defaultDataSources: {}, modelBuilder: [Object] },
     setup: [Function],
     _ACL: [Function: getACL],
     checkAccess: [Function],
     _getAccessTypeForMethod: [Function],
     getApp: [Function],
     remoteMethod: [Function],
     disableRemoteMethod: [Function],
     belongsToRemoting: [Function],
     hasOneRemoting: [Function],
     hasManyRemoting: [Function],
     scopeRemoting: [Function],
     nestRemoting: [Function],
     ValidationError: { [Function: ValidationError] super_: [Object], maxPropertyStringLength: 32 },
     sharedClass: 
      { name: 'User',
        ctor: [Circular],
        _methods: [Object],
        _resolvers: [Object],
        _disabledMethods: {},
        http: [Object],
        sharedCtor: [Object] },
     sharedCtor: { [Function] accepts: [Object], http: [Object], returns: [Object] },
     beforeRemote: [Function],
     afterRemote: [Function],
     afterRemoteError: [Function],
     _runWhenAttachedToApp: [Function],
     create: { [Function] _delegate: true },
     updateOrCreate: { [Function: upsert] _delegate: true },
     upsert: { [Function: upsert] _delegate: true },
     findOrCreate: { [Function: findOrCreate] _delegate: true },
     exists: { [Function: exists] _delegate: true },
     findById: { [Function: find] _delegate: true },
     find: { [Function: find] _delegate: true },
     findOne: { [Function: findOne] _delegate: true },
     destroyAll: { [Function: destroyAll] _delegate: true },
     remove: { [Function: destroyAll] _delegate: true },
     deleteAll: { [Function: destroyAll] _delegate: true },
     updateAll: { [Function: updateAll] _delegate: true },
     update: { [Function: updateAll] _delegate: true },
     destroyById: { [Function: deleteById] _delegate: true },
     removeById: { [Function: deleteById] _delegate: true },
     deleteById: { [Function: deleteById] _delegate: true },
     count: { [Function] _delegate: true },
     getIdName: [Function],
     setupRemoting: [Function],
     diff: [Function],
     changes: [Function],
     checkpoint: [Function],
     currentCheckpoint: [Function],
     replicate: [Function],
     createUpdates: [Function],
     bulkUpdate: [Function],
     getChangeModel: [Function],
     getSourceId: [Function],
     enableChangeTracking: [Function],
     _defineChangeModel: [Function],
     rectifyAllChanges: [Function],
     handleChangeError: [Function],
     rectifyChange: [Function],
     findLastChange: [Function],
     updateLastChange: [Function],
     createChangeStream: { [Function] _delegate: true },
     normalizeCredentials: [Function],
     login: [Function],
     logout: [Function],
     generateVerificationToken: [Function],
     confirm: [Function],
     resetPassword: [Function],
     hashPassword: [Function],
     validatePassword: [Function],
     email: 
      { [Function: ModelConstructor]
        setMaxListeners: [Function],
        emit: [Function],
        addListener: [Function],
        on: [Function],
        once: [Function],
        removeListener: [Function],
        removeAllListeners: [Function],
        listeners: [Function],
        super_: [Object],
        defineProperty: [Function],
        getPropertyType: [Function],
        isProtectedProperty: [Function],
        isHiddenProperty: [Function],
        mixin: [Function],
        getDataSource: [Function],
        observe: [Function],
        removeObserver: [Function],
        clearObservers: [Function],
        notifyObserversOf: [Function],
        _notifyBaseObservers: [Function],
        notifyObserversAround: [Function],
        afterInitialize: null,
        beforeValidate: null,
        afterValidate: null,
        beforeSave: null,
        afterSave: null,
        beforeCreate: null,
        afterCreate: null,
        beforeUpdate: null,
        afterUpdate: null,
        beforeDestroy: null,
        afterDestroy: null,
        validatesPresenceOf: [Function],
        validatesAbsenceOf: [Function],
        validatesLengthOf: [Function],
        validatesNumericalityOf: [Function],
        validatesInclusionOf: [Function],
        validatesExclusionOf: [Function],
        validatesFormatOf: [Function],
        validate: [Function],
        validateAsync: [Function],
        validatesUniquenessOf: [Function],
        getter: {},
        setter: {},
        definition: [Object],
        settings: [Object],
        forEachProperty: [Function],
        attachTo: [Function],
        extend: [Function],
        registerProperty: [Function],
        registry: [Object],
        setup: [Function],
        _ACL: [Function: getACL],
        checkAccess: [Function],
        _getAccessTypeForMethod: [Function],
        getApp: [Function],
        remoteMethod: [Function],
        disableRemoteMethod: [Function],
        belongsToRemoting: [Function],
        hasOneRemoting: [Function],
        hasManyRemoting: [Function],
        scopeRemoting: [Function],
        nestRemoting: [Function],
        ValidationError: [Object],
        sharedClass: [Object],
        sharedCtor: [Object],
        beforeRemote: [Function],
        afterRemote: [Function],
        afterRemoteError: [Function],
        _runWhenAttachedToApp: [Function],
        send: [Function],
        autoAttach: 'mail' },
     accessToken: 
      { [Function: ModelConstructor]
        setMaxListeners: [Function],
        emit: [Function],
        addListener: [Function],
        on: [Function],
        once: [Function],
        removeListener: [Function],
        removeAllListeners: [Function],
        listeners: [Function],
        super_: [Object],
        defineProperty: [Function],
        getPropertyType: [Function],
        isProtectedProperty: [Function],
        isHiddenProperty: [Function],
        mixin: [Function],
        getDataSource: [Function],
        observe: [Function],
        removeObserver: [Function],
        clearObservers: [Function],
        notifyObserversOf: [Function],
        _notifyBaseObservers: [Function],
        notifyObserversAround: [Function],
        afterInitialize: null,
        beforeValidate: null,
        afterValidate: null,
        beforeSave: null,
        afterSave: null,
        beforeCreate: null,
        afterCreate: null,
        beforeUpdate: null,
        afterUpdate: null,
        beforeDestroy: null,
        afterDestroy: null,
        validatesPresenceOf: [Function],
        validatesAbsenceOf: [Function],
        validatesLengthOf: [Function],
        validatesNumericalityOf: [Function],
        validatesInclusionOf: [Function],
        validatesExclusionOf: [Function],
        validatesFormatOf: [Function],
        validate: [Function],
        validateAsync: [Function],
        validatesUniquenessOf: [Function],
        getter: {},
        setter: {},
        definition: [Object],
        settings: [Object],
        forEachProperty: [Function],
        attachTo: [Function],
        extend: [Function],
        registerProperty: [Function],
        registry: [Object],
        setup: [Function: setupPersistedModel],
        _ACL: [Function: getACL],
        checkAccess: [Function],
        _getAccessTypeForMethod: [Function],
        getApp: [Function],
        remoteMethod: [Function],
        disableRemoteMethod: [Function],
        belongsToRemoting: [Function],
        hasOneRemoting: [Function],
        hasManyRemoting: [Function],
        scopeRemoting: [Function],
        nestRemoting: [Function],
        ValidationError: [Object],
        sharedClass: [Object],
        sharedCtor: [Object],
        beforeRemote: [Function],
        afterRemote: [Function],
        afterRemoteError: [Function],
        _runWhenAttachedToApp: [Function],
        create: [Object],
        updateOrCreate: [Object],
        upsert: [Object],
        findOrCreate: [Object],
        exists: [Object],
        findById: [Object],
        find: [Object],
        findOne: [Object],
        destroyAll: [Object],
        remove: [Object],
        deleteAll: [Object],
        updateAll: [Object],
        update: [Object],
        destroyById: [Object],
        removeById: [Object],
        deleteById: [Object],
        count: [Object],
        getIdName: [Function],
        setupRemoting: [Function],
        diff: [Function],
        changes: [Function],
        checkpoint: [Function],
        currentCheckpoint: [Function],
        replicate: [Function],
        createUpdates: [Function],
        bulkUpdate: [Function],
        getChangeModel: [Function],
        getSourceId: [Function],
        enableChangeTracking: [Function],
        _defineChangeModel: [Function],
        rectifyAllChanges: [Function],
        handleChangeError: [Function],
        rectifyChange: [Function],
        findLastChange: [Function],
        updateLastChange: [Function],
        createChangeStream: [Object],
        ANONYMOUS: [Object],
        createAccessTokenId: [Function],
        findForRequest: [Function],
        autoAttach: 'db' },
     autoAttach: 'db' },
  defineProperty: [Function],
  getPropertyType: [Function],
  isProtectedProperty: [Function],
  isHiddenProperty: [Function],
  mixin: [Function],
  getDataSource: [Function],
  observe: [Function],
  removeObserver: [Function],
  clearObservers: [Function],
  notifyObserversOf: [Function],
  _notifyBaseObservers: [Function],
  notifyObserversAround: [Function],
  afterInitialize: null,
  beforeValidate: null,
  afterValidate: null,
  beforeSave: null,
  afterSave: null,
  beforeCreate: null,
  afterCreate: null,
  beforeUpdate: null,
  afterUpdate: null,
  beforeDestroy: null,
  afterDestroy: null,
  validatesPresenceOf: [Function],
  validatesAbsenceOf: [Function],
  validatesLengthOf: [Function],
  validatesNumericalityOf: [Function],
  validatesInclusionOf: [Function],
  validatesExclusionOf: [Function],
  validatesFormatOf: [Function],
  validate: [Function],
  validateAsync: [Function],
  validatesUniquenessOf: [Function],
  getter: {},
  setter: { password: [Function] },
  definition: 
   { modelBuilder: 
      { models: [Object],
        definitions: [Object],
        mixins: [Object],
        defaultModelBaseClass: [Object],
        _nameCount: 5 },
     name: 'Driver',
     rawProperties: 
      { first_name: [Object],
        last_name: [Object],
        photo: [Object],
        realm: [Object],
        username: [Object],
        password: [Object],
        credentials: [Object],
        challenges: [Object],
        email: [Object],
        emailVerified: [Object],
        verificationToken: [Object],
        status: [Object],
        created: [Object],
        lastUpdated: [Object],
        id: [Object] },
     settings: 
      { strict: false,
        base: 'User',
        hidden: [Object],
        acls: [Object],
        relations: [Object],
        maxTTL: 31556926,
        ttl: 1209600,
        validateUpsert: true,
        idInjection: true,
        validations: [],
        methods: {} },
     relations: [],
     properties: 
      { first_name: [Object],
        last_name: [Object],
        photo: [Object],
        realm: [Object],
        username: [Object],
        password: [Object],
        credentials: [Object],
        challenges: [Object],
        email: [Object],
        emailVerified: [Object],
        verificationToken: [Object],
        status: [Object],
        created: [Object],
        lastUpdated: [Object],
        id: [Object] },
     _ids: [ [Object] ] },
  settings: 
   { strict: false,
     base: 'User',
     hidden: [ 'password' ],
     acls: 
      [ [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object] ],
     relations: { accessTokens: [Object] },
     maxTTL: 31556926,
     ttl: 1209600,
     validateUpsert: true,
     idInjection: true,
     validations: [],
     methods: {} },
  forEachProperty: [Function],
  attachTo: [Function],
  extend: [Function],
  registerProperty: [Function],
  registry: 
   { defaultDataSources: {},
     modelBuilder: 
      { models: [Object],
        definitions: [Object],
        mixins: [Object],
        defaultModelBaseClass: [Object],
        _nameCount: 5 } },
  setup: [Function],
  _ACL: [Function: getACL],
  checkAccess: [Function],
  _getAccessTypeForMethod: [Function],
  getApp: [Function],
  remoteMethod: [Function],
  disableRemoteMethod: [Function],
  belongsToRemoting: [Function],
  hasOneRemoting: [Function],
  hasManyRemoting: [Function],
  scopeRemoting: [Function],
  nestRemoting: [Function],
  ValidationError: 
   { [Function: ValidationError]
     super_: 
      { [Function: Error]
        captureStackTrace: [Function: captureStackTrace],
        stackTraceLimit: 10,
        prepareStackTrace: undefined },
     maxPropertyStringLength: 32 },
  sharedClass: 
   { name: 'Driver',
     ctor: [Circular],
     _methods: 
      [ [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object] ],
     _resolvers: [ [Function: resolver] ],
     _disabledMethods: {},
     http: { path: '/Drivers' },
     sharedCtor: 
      { fn: [Object],
        name: 'sharedCtor',
        aliases: [],
        isStatic: false,
        accepts: [Object],
        returns: [Object],
        errors: [],
        description: undefined,
        accessType: undefined,
        notes: undefined,
        documented: true,
        http: [Object],
        rest: {},
        shared: true,
        sharedClass: [Circular],
        ctor: [Circular],
        sharedCtor: undefined,
        isSharedCtor: true,
        stringName: 'Driver.prototype.sharedCtor' } },
  sharedCtor: 
   { [Function]
     accepts: [ [Object] ],
     http: [ [Object] ],
     returns: { root: true } },
  beforeRemote: [Function],
  afterRemote: [Function],
  afterRemoteError: [Function],
  _runWhenAttachedToApp: [Function],
  create: { [Function] _delegate: true },
  updateOrCreate: { [Function: upsert] _delegate: true },
  upsert: { [Function: upsert] _delegate: true },
  findOrCreate: { [Function: findOrCreate] _delegate: true },
  exists: { [Function: exists] _delegate: true },
  findById: { [Function: find] _delegate: true },
  find: { [Function: find] _delegate: true },
  findOne: { [Function: findOne] _delegate: true },
  destroyAll: { [Function: destroyAll] _delegate: true },
  remove: { [Function: destroyAll] _delegate: true },
  deleteAll: { [Function: destroyAll] _delegate: true },
  updateAll: { [Function: updateAll] _delegate: true },
  update: { [Function: updateAll] _delegate: true },
  destroyById: { [Function: deleteById] _delegate: true },
  removeById: { [Function: deleteById] _delegate: true },
  deleteById: { [Function: deleteById] _delegate: true },
  count: { [Function] _delegate: true },
  getIdName: [Function],
  setupRemoting: [Function],
  diff: [Function],
  changes: [Function],
  checkpoint: [Function],
  currentCheckpoint: [Function],
  replicate: [Function],
  createUpdates: [Function],
  bulkUpdate: [Function],
  getChangeModel: [Function],
  getSourceId: [Function],
  enableChangeTracking: [Function],
  _defineChangeModel: [Function],
  rectifyAllChanges: [Function],
  handleChangeError: [Function],
  rectifyChange: [Function],
  findLastChange: [Function],
  updateLastChange: [Function],
  createChangeStream: { [Function] _delegate: true },
  normalizeCredentials: [Function],
  login: [Function],
  logout: [Function],
  generateVerificationToken: [Function],
  confirm: [Function],
  resetPassword: [Function],
  hashPassword: [Function],
  validatePassword: [Function],
  email: 
   { [Function: ModelConstructor]
     setMaxListeners: [Function],
     emit: [Function],
     addListener: [Function],
     on: [Function],
     once: [Function],
     removeListener: [Function],
     removeAllListeners: [Function],
     listeners: [Function],
     super_: 
      { [Function: ModelConstructor]
        setMaxListeners: [Function],
        emit: [Function],
        addListener: [Function],
        on: [Function],
        once: [Function],
        removeListener: [Function],
        removeAllListeners: [Function],
        listeners: [Function],
        super_: [Object],
        defineProperty: [Function],
        getPropertyType: [Function],
        isProtectedProperty: [Function],
        isHiddenProperty: [Function],
        mixin: [Function],
        getDataSource: [Function],
        observe: [Function],
        removeObserver: [Function],
        clearObservers: [Function],
        notifyObserversOf: [Function],
        _notifyBaseObservers: [Function],
        notifyObserversAround: [Function],
        afterInitialize: null,
        beforeValidate: null,
        afterValidate: null,
        beforeSave: null,
        afterSave: null,
        beforeCreate: null,
        afterCreate: null,
        beforeUpdate: null,
        afterUpdate: null,
        beforeDestroy: null,
        afterDestroy: null,
        validatesPresenceOf: [Function],
        validatesAbsenceOf: [Function],
        validatesLengthOf: [Function],
        validatesNumericalityOf: [Function],
        validatesInclusionOf: [Function],
        validatesExclusionOf: [Function],
        validatesFormatOf: [Function],
        validate: [Function],
        validateAsync: [Function],
        validatesUniquenessOf: [Function],
        getter: {},
        setter: {},
        definition: [Object],
        settings: [Object],
        forEachProperty: [Function],
        attachTo: [Function],
        extend: [Function],
        registerProperty: [Function],
        registry: [Object],
        setup: [Function],
        _ACL: [Function: getACL],
        checkAccess: [Function],
        _getAccessTypeForMethod: [Function],
        getApp: [Function],
        remoteMethod: [Function],
        disableRemoteMethod: [Function],
        belongsToRemoting: [Function],
        hasOneRemoting: [Function],
        hasManyRemoting: [Function],
        scopeRemoting: [Function],
        nestRemoting: [Function],
        ValidationError: [Object],
        sharedClass: [Object],
        sharedCtor: [Object],
        beforeRemote: [Function],
        afterRemote: [Function],
        afterRemoteError: [Function],
        _runWhenAttachedToApp: [Function] },
     defineProperty: [Function],
     getPropertyType: [Function],
     isProtectedProperty: [Function],
     isHiddenProperty: [Function],
     mixin: [Function],
     getDataSource: [Function],
     observe: [Function],
     removeObserver: [Function],
     clearObservers: [Function],
     notifyObserversOf: [Function],
     _notifyBaseObservers: [Function],
     notifyObserversAround: [Function],
     afterInitialize: null,
     beforeValidate: null,
     afterValidate: null,
     beforeSave: null,
     afterSave: null,
     beforeCreate: null,
     afterCreate: null,
     beforeUpdate: null,
     afterUpdate: null,
     beforeDestroy: null,
     afterDestroy: null,
     validatesPresenceOf: [Function],
     validatesAbsenceOf: [Function],
     validatesLengthOf: [Function],
     validatesNumericalityOf: [Function],
     validatesInclusionOf: [Function],
     validatesExclusionOf: [Function],
     validatesFormatOf: [Function],
     validate: [Function],
     validateAsync: [Function],
     validatesUniquenessOf: [Function],
     getter: {},
     setter: {},
     definition: 
      { modelBuilder: [Object],
        name: 'Email',
        rawProperties: [Object],
        settings: [Object],
        relations: [],
        properties: [Object],
        _ids: [Object] },
     settings: { strict: false, base: 'Model' },
     forEachProperty: [Function],
     attachTo: [Function],
     extend: [Function],
     registerProperty: [Function],
     registry: { defaultDataSources: {}, modelBuilder: [Object] },
     setup: [Function],
     _ACL: [Function: getACL],
     checkAccess: [Function],
     _getAccessTypeForMethod: [Function],
     getApp: [Function],
     remoteMethod: [Function],
     disableRemoteMethod: [Function],
     belongsToRemoting: [Function],
     hasOneRemoting: [Function],
     hasManyRemoting: [Function],
     scopeRemoting: [Function],
     nestRemoting: [Function],
     ValidationError: { [Function: ValidationError] super_: [Object], maxPropertyStringLength: 32 },
     sharedClass: 
      { name: 'Email',
        ctor: [Circular],
        _methods: [],
        _resolvers: [Object],
        _disabledMethods: {},
        http: [Object],
        sharedCtor: [Object] },
     sharedCtor: { [Function] accepts: [Object], http: [Object], returns: [Object] },
     beforeRemote: [Function],
     afterRemote: [Function],
     afterRemoteError: [Function],
     _runWhenAttachedToApp: [Function],
     send: [Function],
     autoAttach: 'mail' },
  accessToken: 
   { [Function: ModelConstructor]
     setMaxListeners: [Function],
     emit: [Function],
     addListener: [Function],
     on: [Function],
     once: [Function],
     removeListener: [Function],
     removeAllListeners: [Function],
     listeners: [Function],
     super_: 
      { [Function: ModelConstructor]
        setMaxListeners: [Function],
        emit: [Function],
        addListener: [Function],
        on: [Function],
        once: [Function],
        removeListener: [Function],
        removeAllListeners: [Function],
        listeners: [Function],
        super_: [Object],
        defineProperty: [Function],
        getPropertyType: [Function],
        isProtectedProperty: [Function],
        isHiddenProperty: [Function],
        mixin: [Function],
        getDataSource: [Function],
        observe: [Function],
        removeObserver: [Function],
        clearObservers: [Function],
        notifyObserversOf: [Function],
        _notifyBaseObservers: [Function],
        notifyObserversAround: [Function],
        afterInitialize: null,
        beforeValidate: null,
        afterValidate: null,
        beforeSave: null,
        afterSave: null,
        beforeCreate: null,
        afterCreate: null,
        beforeUpdate: null,
        afterUpdate: null,
        beforeDestroy: null,
        afterDestroy: null,
        validatesPresenceOf: [Function],
        validatesAbsenceOf: [Function],
        validatesLengthOf: [Function],
        validatesNumericalityOf: [Function],
        validatesInclusionOf: [Function],
        validatesExclusionOf: [Function],
        validatesFormatOf: [Function],
        validate: [Function],
        validateAsync: [Function],
        validatesUniquenessOf: [Function],
        getter: {},
        setter: {},
        definition: [Object],
        settings: [Object],
        forEachProperty: [Function],
        attachTo: [Function],
        extend: [Function],
        registerProperty: [Function],
        registry: [Object],
        setup: [Function: setupPersistedModel],
        _ACL: [Function: getACL],
        checkAccess: [Function],
        _getAccessTypeForMethod: [Function],
        getApp: [Function],
        remoteMethod: [Function],
        disableRemoteMethod: [Function],
        belongsToRemoting: [Function],
        hasOneRemoting: [Function],
        hasManyRemoting: [Function],
        scopeRemoting: [Function],
        nestRemoting: [Function],
        ValidationError: [Object],
        sharedClass: [Object],
        sharedCtor: [Object],
        beforeRemote: [Function],
        afterRemote: [Function],
        afterRemoteError: [Function],
        _runWhenAttachedToApp: [Function],
        create: [Object],
        updateOrCreate: [Object],
        upsert: [Object],
        findOrCreate: [Object],
        exists: [Object],
        findById: [Object],
        find: [Object],
        findOne: [Object],
        destroyAll: [Object],
        remove: [Object],
        deleteAll: [Object],
        updateAll: [Object],
        update: [Object],
        destroyById: [Object],
        removeById: [Object],
        deleteById: [Object],
        count: [Object],
        getIdName: [Function],
        setupRemoting: [Function],
        diff: [Function],
        changes: [Function],
        checkpoint: [Function],
        currentCheckpoint: [Function],
        replicate: [Function],
        createUpdates: [Function],
        bulkUpdate: [Function],
        getChangeModel: [Function],
        getSourceId: [Function],
        enableChangeTracking: [Function],
        _defineChangeModel: [Function],
        rectifyAllChanges: [Function],
        handleChangeError: [Function],
        rectifyChange: [Function],
        findLastChange: [Function],
        updateLastChange: [Function],
        createChangeStream: [Object],
        autoAttach: 'db' },
     defineProperty: [Function],
     getPropertyType: [Function],
     isProtectedProperty: [Function],
     isHiddenProperty: [Function],
     mixin: [Function],
     getDataSource: [Function],
     observe: [Function],
     removeObserver: [Function],
     clearObservers: [Function],
     notifyObserversOf: [Function],
     _notifyBaseObservers: [Function],
     notifyObserversAround: [Function],
     afterInitialize: null,
     beforeValidate: null,
     afterValidate: null,
     beforeSave: null,
     afterSave: null,
     beforeCreate: null,
     afterCreate: null,
     beforeUpdate: null,
     afterUpdate: null,
     beforeDestroy: null,
     afterDestroy: null,
     validatesPresenceOf: [Function],
     validatesAbsenceOf: [Function],
     validatesLengthOf: [Function],
     validatesNumericalityOf: [Function],
     validatesInclusionOf: [Function],
     validatesExclusionOf: [Function],
     validatesFormatOf: [Function],
     validate: [Function],
     validateAsync: [Function],
     validatesUniquenessOf: [Function],
     getter: {},
     setter: {},
     definition: 
      { modelBuilder: [Object],
        name: 'AccessToken',
        rawProperties: [Object],
        settings: [Object],
        relations: [],
        properties: [Object],
        _ids: [Object] },
     settings: 
      { strict: false,
        base: [Object],
        relations: [Object],
        acls: [Object] },
     forEachProperty: [Function],
     attachTo: [Function],
     extend: [Function],
     registerProperty: [Function],
     registry: { defaultDataSources: {}, modelBuilder: [Object] },
     setup: [Function: setupPersistedModel],
     _ACL: [Function: getACL],
     checkAccess: [Function],
     _getAccessTypeForMethod: [Function],
     getApp: [Function],
     remoteMethod: [Function],
     disableRemoteMethod: [Function],
     belongsToRemoting: [Function],
     hasOneRemoting: [Function],
     hasManyRemoting: [Function],
     scopeRemoting: [Function],
     nestRemoting: [Function],
     ValidationError: { [Function: ValidationError] super_: [Object], maxPropertyStringLength: 32 },
     sharedClass: 
      { name: 'AccessToken',
        ctor: [Circular],
        _methods: [Object],
        _resolvers: [Object],
        _disabledMethods: {},
        http: [Object],
        sharedCtor: [Object] },
     sharedCtor: { [Function] accepts: [Object], http: [Object], returns: [Object] },
     beforeRemote: [Function],
     afterRemote: [Function],
     afterRemoteError: [Function],
     _runWhenAttachedToApp: [Function],
     create: { [Function] _delegate: true },
     updateOrCreate: { [Function: upsert] _delegate: true },
     upsert: { [Function: upsert] _delegate: true },
     findOrCreate: { [Function: findOrCreate] _delegate: true },
     exists: { [Function: exists] _delegate: true },
     findById: { [Function: find] _delegate: true },
     find: { [Function: find] _delegate: true },
     findOne: { [Function: findOne] _delegate: true },
     destroyAll: { [Function: destroyAll] _delegate: true },
     remove: { [Function: destroyAll] _delegate: true },
     deleteAll: { [Function: destroyAll] _delegate: true },
     updateAll: { [Function: updateAll] _delegate: true },
     update: { [Function: updateAll] _delegate: true },
     destroyById: { [Function: deleteById] _delegate: true },
     removeById: { [Function: deleteById] _delegate: true },
     deleteById: { [Function: deleteById] _delegate: true },
     count: { [Function] _delegate: true },
     getIdName: [Function],
     setupRemoting: [Function],
     diff: [Function],
     changes: [Function],
     checkpoint: [Function],
     currentCheckpoint: [Function],
     replicate: [Function],
     createUpdates: [Function],
     bulkUpdate: [Function],
     getChangeModel: [Function],
     getSourceId: [Function],
     enableChangeTracking: [Function],
     _defineChangeModel: [Function],
     rectifyAllChanges: [Function],
     handleChangeError: [Function],
     rectifyChange: [Function],
     findLastChange: [Function],
     updateLastChange: [Function],
     createChangeStream: { [Function] _delegate: true },
     ANONYMOUS: 
      { id: '$anonymous',
        created: Tue Oct 20 2015 10:54:50 GMT-0400 (EDT),
        ttl: 1209600 },
     createAccessTokenId: [Function],
     findForRequest: [Function],
     autoAttach: 'db' },
  autoAttach: 'db' }
Web server listening at: http://0.0.0.0:3000
Browse your REST API at http://0.0.0.0:3000/explorer
